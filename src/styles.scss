// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use "./app/app-theme" as app;
@use "./app/_layout/app-header/app-header-theme" as app-header;
@use "./app/datasets/batch-view/batch-view-theme" as batch-view;
@use "./app/datasets/dashboard/dashboard-theme" as dashboard;
@use "./app/datasets/datafiles/datafiles-theme" as datafiles;
@use "./app/datasets/dataset-detail/dataset-detail-theme" as dataset-detail;
@use "./app/datasets/dataset-details-dashboard/dataset-details-dashboard-theme" as dataset-details-dashboard;
@use "./app/datasets/dataset-lifecycle/dataset-lifecycle-theme" as dataset-lifecycle;
@use "./app/datasets/dataset-table/dataset-table-theme" as dataset-table;
@use "./app/datasets/dataset-table-settings/dataset-table-settings-theme" as dataset-table-settings;
@use "./app/datasets/reduce/reduce-theme" as reduce;
@use "./app/instruments/instrument-details/instrument-details-theme" as instrument-details;
@use "./app/logbooks/logbooks-detail/logbooks-detail-theme" as logbooks-detail;
@use "./app/logbooks/logbooks-table/logbooks-table-theme" as logbooks-table;
@use "./app/proposals/proposal-detail/proposal-detail-theme" as proposal-detail;
@use "./app/publisheddata/publisheddata-details/publisheddata-details-theme" as publisheddata-details;
@use "./app/samples/sample-dashboard/sample-dashboard-theme" as sample-dashboard;
@use "./app/samples/sample-detail/sample-detail-theme" as sample-detail;
@use "./app/shared/modules/breadcrumb/breadcrumb-theme" as breadcrumb;
@use "./app/shared/modules/error-page/error-page-theme" as error-page;
@use "./app/shared/modules/shared-table/shared-table-theme" as shared-table;
@use "./app/shared/modules/table/table-theme" as table;
@use "./app/users/user-settings/user-settings-theme" as user-settings;

$custom-typography: mat.define-typography-config(
  $font-family: '"Titillium Web", Calibri, sans-serif;',
);
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core($custom-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$theme-primary: (
  default: var(--theme-primary-default),
  lighter: var(--theme-primary-lighter),
  darker: var(--theme-primary-darker),
  contrast: (
    default: var(--theme-primary-default-contrast),
    lighter: var(--theme-primary-lighter-contrast),
    darker: var(--theme-primary-darker-contrast)
  )
);

$theme-accent: (
  default: var(--theme-accent-default),
  lighter: var(--theme-accent-lighter),
  darker: var(--theme-accent-darker),
  contrast: (
    default: var(--theme-accent-default-contrast),
    lighter: var(--theme-accent-lighter-contrast),
    darker: var (--theme-accent-darker-contrast)
  )
);

$theme-warn: (
  default: var(--theme-warn-default),
  lighter: var(--theme-warn-lighter),
  darker: var(--theme-warn-darker),
  contrast: (
    default: var(--theme-warn-default-contrast),
    lighter: var(--theme-warn-lighter-contrast),
    darker: var(--theme-warn-darker-contrast)
  )
);

$theme-warn-2: (
  default: var(--theme-warn-2-default),
  lighter: var(--theme-warn-2-lighter),
  darker: var(--theme-warn-2-darker),
  contrast: (
    default: var(--theme-warn-2-default-contrast),
    lighter: var(--theme-warn-2-lighter-contrast),
    darker: var(--theme-warn-2-darker-contrast)
  )
);

$theme-header-1: (
  default: var(--theme-header-1-default),
  lighter: var(--theme-header-1-lighter),
  darker: var(--theme-header-1-darker),
  contrast: (
    default: var(--theme-header-1-default-contrast),
    lighter: var(--theme-header-1-lighter-contrast),
    darker: var(--theme-header-1-darker-contrast)
  )
);

$theme-header-2: (
  default: var(--theme-header-2-default),
  lighter: var(--theme-header-2-lighter),
  darker: var(--theme-header-2-darker),
  contrast: (
    default: var(--theme-header-2-default-contrast),
    lighter: var(--theme-header-2-lighter-contrast),
    darker: var(--theme-header-2-darker-contrast)
  )
);

$theme-header-3: (
  default: var(--theme-header-3-default),
  lighter: var(--theme-header-3-lighter),
  darker: var(--theme-header-3-darker),
  contrast: (
    default: var(--theme-header-3-default-contrast),
    lighter: var(--theme-header-3-lighter-contrast),
    darker: var(--theme-header-3-darker-contrast)
  )
);

$theme-header-4: (
  default: var(--theme-header-4-default),
  lighter: var(--theme-header-4-lighter),
  darker: var(--theme-header-4-darker),
  contrast: (
    default: var(--theme-header-4-default-contrast),
    lighter: var(--theme-header-4-lighter-contrast),
    darker: var(--theme-header-4-darker-contrast)
  )
);

$theme-hover: (
  default: var(--theme-hover-default),
  lighter: var(--theme-hover-lighter),
  darker: var(--theme-hover-darker),
  contrast: (
    default: var(--theme-hover-default-contrast),
    lighter: var(--theme-hover-lighter-contrast),
    darker: var(--theme-hover-darker-contrast)
  )
);

$primary: mat.define-palette($theme-primary, "default", "lighter", "darker");
$accent: mat.define-palette($theme-accent, "default", "lighter", "darker");
$warn: mat.define-palette($theme-warn, "default", "lighter", "darker");
$warn-2: mat.define-palette($theme-warn-2, "default", "lighter", "darker");
$header-1: mat.define-palette($theme-header-1, "default", "lighter", "darker");
$header-2: mat.define-palette($theme-header-2, "default", "lighter", "darker");
$header-3: mat.define-palette($theme-header-3, "default", "lighter", "darker");
$header-4: mat.define-palette($theme-header-4, "default", "lighter", "darker");
$hover: mat.define-palette($theme-hover, "default", "lighter", "darker");

@function custom-light-theme(
  $primary,
  $accent,
  $warn,
  $warn-2,
  $header-1,
  $header-2,
  $header-3,
  $header-4,
  $hover
) {
  @return map-merge(
    mat.define-light-theme($primary, $accent, $warn),
    (
      warn-2: $warn-2,
      header-1: $header-1,
      header-2: $header-2,
      header-3: $header-4,
      header-4: $header-4,
      hover: $hover,
    )
  );
}

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: custom-light-theme(
  $primary,
  $accent,
  $warn,
  $warn-2,
  $header-1,
  $header-2,
  $header-3,
  $header-4,
  $hover
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);
@include app.theme($theme);
@include app-header.theme($theme);
@include batch-view.theme($theme);
@include dashboard.theme($theme);
@include datafiles.theme($theme);
@include dataset-detail.theme($theme);
@include dataset-details-dashboard.theme($theme);
@include dataset-lifecycle.theme($theme);
@include dataset-table.theme($theme);
@include dataset-table-settings.theme($theme);
@include reduce.theme($theme);
@include instrument-details.theme($theme);
@include logbooks-detail.theme($theme);
@include logbooks-table.theme($theme);
@include proposal-detail.theme($theme);
@include publisheddata-details.theme($theme);
@include sample-dashboard.theme($theme);
@include sample-detail.theme($theme);
@include breadcrumb.theme($theme);
@include error-page.theme($theme);
@include shared-table.theme($theme);
@include table.theme($theme);
@include user-settings.theme($theme);

/* You can add global styles to this file, and also import other style files */
@import 'assets/styles/titillium-web.scss';
@import 'assets/styles/material-icons.scss';

html,
body {
  height: 100vh;
  margin: 0;
  border: 0;
  padding: 0;
}

a {
  text-decoration: none;
}

a:hover {
  cursor: pointer;
}

.no-hover-effect.mat-button .mat-button-focus-overlay {
  background-color: transparent;
}

.snackbar-success {
  background-color: mat.get-color-from-palette($primary, "default");
}

.snackbar-error {
  background-color: mat.get-color-from-palette($warn, "default");
}
